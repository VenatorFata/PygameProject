Проект "Ярославская змейка"
Выполнили:
Кузьмицкий Артём
Курцев Павел
Новожилова Вера
1. Введение
    В современном мире, где видеоигры стали неотъемлемой частью повседневной жизни, классические игры, такие как "Змейка", продолжают оставаться популярными.
    В 2025 году, который по восточному календарю является Годом Змеи, игра становится особенно символичной, что привлекает внимание к проекту и делает его актуальным для широкой аудитории.
    Несмотря на популярность классической "Змейки", многие современные игроки считают её устаревшей и недостаточно
    Особенностью нашей змейки стал её разнообразный рацион: вместо привычных яблок она лакомится сочными арбузами, сладкими пончиками, полезной брокколи и даже зеленью.
    Так же в нашей змейке есть система подсчёта очков и времени. Чем быстрее вы собираете фрукты, тем лучше ваш результат!
2. Цель
Цель проекта — создать игру "Змейка", с уникальным оформлением.
3. Задачи
    1) Создать основную игру
    2) Добавить спрайты
    3) Реализовать систему подсчёта очков за съеденные предметы
    4) Разнообразить рацион змейки
    5) Обеспечить возможность перезапуска игры после её окончания
4. Как играть
    1) Запустить игру
    2) Управлять змейкой с помощью стрелок на клавиатуре
    3) Собирать еду, чтобы увеличить длину змейки
    4) Игра заканчивается, если змейка сталкивается со своим телом
    5) После окончания игры можно её закрыть или начать прохождение заново
5. Используемые библиотеки
    1) Sys
    2) Os
    3) Pygame
    4) Random
    5) Math
6. Принцип работы
    Инициализация игры.
    Установка заголовка окна и загрузка необходимых ресурсов.
    Определяются константы
    Snake: Змейка и её сегменты.
    SnakeSegment: Класс, представляющий отдельный сегмент змейки.
    Fruit: Класс, представляющий еду, которую змейка должна собирать. Она появляются в случайных местах на игровом поле.
    SnakeHeadSprite и SnakeBodySprite: Классы для спрайтов головы и тела змейки, отрисовка и поворот головы при движении.
    FruitSprite: Класс для спрайтов фруктов, который отвечает за отрисовку фруктов на экране.
    В основном цикле игры происходит обработка ввода пользователя (нажатия клавиш), обновление позиции змейки, проверка столкновений и отрисовка всех объектов на экране.
    Игрок управляет змейкой с помощью клавиш стрелок. Змейка может двигаться вверх, вниз, влево и вправо.
    Если змейка сталкивается с вкусняшкой, её длина увеличивается, и еда исчезает, после чего появляется новый фрукт в случайном месте.
    Если змейка сталкивается с самой собой, игра заканчивается, и на экране появляется сообщение "Game Over".
    Телепортация: Если змейка выходит за границы экрана, она появляется с противоположной стороны.
    Счёт игрока и время игры отображаются в верхней части экрана.
    При завершении игры (столкновение змейки с самой собой) на экране появляется сообщение "Game Over" и предложение сыграть ещё раз.
    Игрок может выбрать, хочет ли он продолжить игру или выйти.
    Функции:
        check_collision: Проверяет столкновения между двумя объектами (например, змейкой и едой).
        exit_game: Завершает игру и закрывает программу.
        show_game_over: Отображает экран завершения игры.
        wait_for_input: Ожидает ввода пользователя после завершения игры.
        check_boundaries: Проверяет, вышла ли змейка за границы экрана, и телепортирует её на противоположную сторону.
        load_image: Загружает изображения для спрайтов.
        get_input: Обрабатывает нажатия клавиш.
        respawn_fruits: Генерирует новые фрукты в случайных местах на игровом поле.
        display_score и display_game_time: Отображают счёт и время игры на экране.
8. Доработки
    1) Разработка различных уровней сложности с изменением скорости игры и сменой местности
    2) Введение новых типов еды с уникальными эффектами
    3) Возможность выбора тем оформления и кастомизации внешнего вида змейки
7. Польза
    Для игроков: Игра предназначена для развлечения и тренировки реакции игрока
    Для разработчиков: Позволяет изучить основы разработки игр на pygame, способствует развитию креативности, улучшению навыков работы с подключением спрайтов
9. Вывод
    Мы получили опыт в разработке игр на Python, и научились пользоваться библиотекой Pygame.
10. Список литературы
    Изображения, спрайты: https://lms.yandex.ru/courses/1180/groups/24052/lessons/6992
    Изображения взяты на сайте: https://www.pngegg.com/
    Введение в репозитории: https://lms.yandex.ru/courses/1180/groups/24052/lessons/7023/materials/20578
    Совместная работа над проектом, введение в репозитории: https://lms.yandex.ru/courses/1180/groups/24052/lessons/6991/materials/20594
    Обработка клавиатуры и курсора. Сборка независимого приложения: https://lms.yandex.ru/courses/1180/groups/24052/lessons/7022/materials/20693

